# 스프링에서 데이터베이스 연결
1. 환경설정
	1) 컨테이너 선언(dispatcher-servlet.xml)
		- DB연결
		- MyBatis 공통 XML 선언
		- 사용할 DAO 인터페이스 패키지 위치 선언
	2) MyBatis 공통 XML
		- 사용할 VO/DTO 등록
		- 개별 업무별 SQL을 저장할 mapper.xml 등록
	3) XXXMapper.xml
		- nameSpace
		- resultMap/resultType
		- id
		- parameterType
2. DB연결 화면 구현 순서
	1) Controller 선언
	2) View단 선언
	3) DAO선언 (DB 처리)
	4) MyBatis 공통 XML 처리
	5) XXXMapper.xml
	6) service 처리
	7) Controller에 model 선언
	8) View단에서 Model 처리
	
3. DB 처리 시 익숙해야 할 내용
	1) DAO 선언과 XXXMapper.xml 연동관계(★★★★)
		DAO인터페이스명	== namespace
		메서드명		== id
		리턴할 객체		== resultMap/resultType
		매개변수/매개객체	== parameterType
	2) Controller -- Service -- DAO 연동 처리 관계
	
4. DAO와 XXXMapper.xml
	1) DAO가 새로 추가될 때
		mybatis.Spring.xml안에 사용할 VO객체 추가, 사용할 업무단위 XXX.xml추가
	2) DAO를 기준으로 연동 처리 관계 설정
		// springweb.a02_mvc.a03_dao.A01_EmpDao
		   ArrayList<Emp> emplist(Emp sch);
		   - 인터페이스명 - namespace: 가능한 한 interface명과 패키지명을 복사해 붙인다.
		   - 리턴할 객체/변수
				> 단일 데이터: resultType으로 설정
					ex) public int totAll();
						<select resultType="int"
					ex) public Emp getEmp(int empno);
						<select resultType="emp"> mypatis.Spring.xml안 alias로 선언된 emp
				> 배열/ArrayList<VO>: resultMap을 일단 상단에 선언한 후, id 값으로 설정
					ex) public ArrayLIst<Emp> empList();
						<resultMap type="emp" id="empResult"/>
						<select resultMap="empResult">
					ex) public String[] getEnames();
						<resultMap type="java.lang.String" id="strResult"/>
						<select resultMap = "strResult">
			- 입력할 매개변수 - parameterType
				> 없을 때: 선언하지 않는다.
					ex) emplist();
						<select>
				> 단일 데이터:
					ex) emplist(int empno); 
						<select parameterType="int">
				> 단일 객체
					ex)	emplist(Emp sch);
						<select parameterType="emp">
						public void insert(HashMap<String, Object> ins);
						<insert parameterType="hashmap">
							${키값}
				> 배열형 - parameterMap: 입력값이 배열형 객체일 때
					ex) 승진할 사원 전체정보를 다중의 사원정보를 통해 검색
						SELECT * FROM EMP WHERE EMPNO IN (7800, 7801, 7802);
						public ArrayList<Emp> schEmp(ArrayList<Integer> empnos);
						<parameterMap type="int" id="intParam">
						<select parameterMap="intParam">
			- id: 메서드명..
					
# 사원정보 등록 철
1. SQL insert
	SELECT max(empno)+1 FROM emp01;
	CREATE SEQUENCE emp01_seq
		START WITH 7935
		MINVALUE 1000
		MAXVALUE 9999
		CYCLE;
	INSERT INTO emp01 VALUES (emp01_seq.nextval,'홍길동','CLERK','7902',sysdate, 3000, 1000, 10)
2. DTO 확인(VO - getter/setter)
3. DAO 작성 - public void empInsert(Emp dto);
4. EmpMapper.xml 작성
----------------------------------------------------------------
5. 등록 인터페이스 Emplist 화면(a02_mvc\a01_empList.jsp)
	- 이벤트 처리
	- 등록할 form url 호출 /insEmpForm.do
6. Controller 추가(A01_EmpController)
	- /insEmpForm.do
7. view단 작성(a02_mvc\a01_empInsertForm.jsp)
	[DB] 사원번호
	[입력] 사원명
	[입력] 직책(select)
	[입력] 관리자(select)
	[DB] 입사일
	[입력] 급여			
	[입력] 보너스			
	[입력] 부서명(select)
	action="${path}/insertEmp.do
-----------------------------------------------------------------
8. Controller(A01_EmpController.java) 추가
	/insertEmp.do			
9. service
	- 입력 메서드 선언
	- DAO 호출	empInsert(Emp dto)
10. Controller(A01_EmpController.java)
	1) 등록 Service 호출
	2) 등록처리 완료 모델 처리
11. view
	등록 완료. 계속 등록 여부 처리
					
					
					
					
					
					
					
					
					